<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>weatherking</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>weatherking</name>
	<description>Weather King Project</description>

	<properties>
		<java.version>11</java.version>
		<docker.repository></docker.repository>
		<docker.image></docker.image>
		<docker.username></docker.username>
		<docker.password></docker.password>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- DB 관련 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<!-- ORM 관련 -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>2.1.2</version>
		</dependency>
		<!-- 마이그레이션 관련 -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>6.3.3</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<!-- 도커 이미지 만들고 push -->
			<!-- https://mvnrepository.com/artifact/com.google.cloud.tools/jib-maven-plugin -->
			<!-- mvn compile jib:build -->
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>2.1.0</version>
				<configuration>
					<!-- 베이스 이미지 -->
					<from>
						<image>openjdk:11.0.4-jdk-slim</image>
					</from>
					<!-- 타겟 어플리케이션 이미지 -->
					<to>
						<image>${docker.repository}/${docker.image}</image>
						<auth>
							<username>${docker.username}</username>
							<password>${docker.password}</password>
						</auth>
						<tags>
							<tag>latest</tag>
						</tags>
					</to>
					<allowInsecureRegistries>true</allowInsecureRegistries>
					<container>
						<environment>
							<ENV_VAR>VALUE</ENV_VAR>
						</environment>
						<jvmFlags>
							<jvmFlag>-Xms512m</jvmFlag>
							<jvmFlag>-Xdebug</jvmFlag>
						</jvmFlags>
						<!-- mainClass와 jvmFlags를 덮어씀 -->
						<entrypoint>
							<!--<shell>sh</shell>
							<options>-c</options>
							<arg>chmod +x /entrypoint.sh &amp;&amp; sync &amp;&amp; /entrypoint.sh</arg>-->
						</entrypoint>
						<ports>
							<port>8080</port>
						</ports>
						<creationTime>
							USE_CURRENT_TIMESTAMP
						</creationTime>
					</container>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
